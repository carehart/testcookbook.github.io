<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test Cookbook</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://testcookbook.com/</link>
    <atom:link href="http://testcookbook.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 15 Sep 2016 18:38:57 -0500</pubDate>
    <lastBuildDate>Thu, 15 Sep 2016 18:38:57 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Gherkin</title>
        <description>&lt;h1 id=&quot;what-is-gherkin&quot;&gt;What is Gherkin&lt;/h1&gt;

&lt;p&gt;Gherkin is a business formatted DSL (Domain Specific Language) that is used to 
describe how somethings behaves without actually implementing that functionality.&lt;/p&gt;

&lt;p&gt;The format for a Gherkin file is done by defining a Feature, then a Scenario.
For Example.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gherkin&quot; data-lang=&quot;gherkin&quot;&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Describe what this feature is about.

  &lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Describe what the scenario will be about.
    &lt;span class=&quot;nf&quot;&gt;Given&lt;/span&gt; I do something
    &lt;span class=&quot;nf&quot;&gt;And&lt;/span&gt; do something else
    &lt;span class=&quot;nf&quot;&gt;When&lt;/span&gt; this happens
    &lt;span class=&quot;nf&quot;&gt;Then&lt;/span&gt; I get to do something new&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Why would you ever want to write the Gherkin?  In a buisness format the Gherkin
file can be used in a variety of ways.  One of those ways is to have a common 
language between the developer and the business. A business minded person can
use this format to describe a behavior that they would like out of the product.
Or the reverse can be true a developer can describe the functionality that they
will be implementing where the business person can understand.&lt;/p&gt;

&lt;p&gt;Now that I have this Gherkin file what can I do with it besides communicate with
the business people.  Once you have a behavior in mind that you need, you can 
start the BDD process.  Write some step definitions to test your new application
based on the description on the DSL then write code to make it pass that behavior.&lt;/p&gt;

&lt;p&gt;Once you have written steps and built your application based on those tests, now
you will have a living documentation for your application.  Depending on the 
framework and language you use, you can create some interesting artifacts to go
along with the Gherkin.  For example by automating these tests you can record the 
video of functionality or capture screenshots to help describe what is going on.&lt;br /&gt;
These tools can be quite valuable to a new user of your application or maybe a new
team member.  As long as you keep up with your tests then you should have current 
and reliable documentation for you application.&lt;/p&gt;

&lt;h2 id=&quot;tools-where-you-can-use-gherkin&quot;&gt;Tools where you can use Gherkin&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Cucumber&lt;/li&gt;
  &lt;li&gt;Lettuce&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 05 Sep 2016 06:22:12 -0500</pubDate>
        <link>http://testcookbook.com/gherkin/2016/09/05/gherkin.html</link>
        <guid isPermaLink="true">http://testcookbook.com/gherkin/2016/09/05/gherkin.html</guid>
        
        
        <category>gherkin</category>
        
      </item>
    
      <item>
        <title>Welcome to Test Cookbook</title>
        <description>&lt;h1 id=&quot;welcome-to-test-cookbook&quot;&gt;Welcome to Test Cookbook&lt;/h1&gt;

&lt;p&gt;Welcome to the Test Cookbook.  Things are under major construction and we are working on building awesome recipies to get you started on your tests.&lt;/p&gt;

&lt;p&gt;Currently we have a few examples on github to do basic selenium tests using Ruby, Java, Python and PHP.  Please enjoy and happy learning.&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Sep 2016 06:22:12 -0500</pubDate>
        <link>http://testcookbook.com/welcome/2016/09/05/welcome.html</link>
        <guid isPermaLink="true">http://testcookbook.com/welcome/2016/09/05/welcome.html</guid>
        
        
        <category>welcome</category>
        
      </item>
    
  </channel>
</rss>
